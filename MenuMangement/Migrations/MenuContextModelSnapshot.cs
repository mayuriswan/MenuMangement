// <auto-generated />
using MenuMangement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuMangement.API.Migrations
{
    [DbContext(typeof(MenuContext))]
    partial class MenuContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.4.24267.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MenuMangement.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuId = 1,
                            Name = "Homemade Drinks"
                        },
                        new
                        {
                            Id = 2,
                            MenuId = 1,
                            Name = "Guten Morgen!"
                        },
                        new
                        {
                            Id = 3,
                            MenuId = 1,
                            Name = "Getränke"
                        },
                        new
                        {
                            Id = 4,
                            MenuId = 1,
                            Name = "im Brot"
                        },
                        new
                        {
                            Id = 5,
                            MenuId = 1,
                            Name = "aus dem Ofen"
                        },
                        new
                        {
                            Id = 6,
                            MenuId = 1,
                            Name = "für den Anfang"
                        },
                        new
                        {
                            Id = 7,
                            MenuId = 1,
                            Name = "Salate"
                        },
                        new
                        {
                            Id = 8,
                            MenuId = 1,
                            Name = "etwas kleines"
                        },
                        new
                        {
                            Id = 9,
                            MenuId = 1,
                            Name = "aus der Pfanne"
                        },
                        new
                        {
                            Id = 10,
                            MenuId = 1,
                            Name = "mein Grill"
                        },
                        new
                        {
                            Id = 11,
                            MenuId = 1,
                            Name = "Holzkohlengrill"
                        },
                        new
                        {
                            Id = 12,
                            MenuId = 1,
                            Name = "etwas Süßes?"
                        });
                });

            modelBuilder.Entity("MenuMangement.API.Models.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lunch Menu",
                            RestaurantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dinner Menu",
                            RestaurantId = 2
                        });
                });

            modelBuilder.Entity("MenuMangement.API.Models.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Hausgemachte Eistee, grüner Apfel Sirup, Minze",
                            Name = "Eistee Grüner Apfel",
                            PictureUrl = "https://my.menulogy.at/images/menu/client2/product-1625749094.png",
                            Price = 4.90m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Hausgemachte Eistee, Wassermelone Sirup, Minze",
                            Name = "Eistee Wassermelone",
                            PictureUrl = "https://my.menulogy.at/images/menu/client2/product-1647878278.png",
                            Price = 4.90m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "Hausgemachte Eistee, Maracuja Sirup, Minze",
                            Name = "Eistee Maracuja",
                            PictureUrl = "https://my.menulogy.at/images/menu/client2/product-1625749342.png",
                            Price = 4.90m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "Hausgemachte Eistee, Erdbeer Sirup, Minze",
                            Name = "Eistee Erdbeere",
                            PictureUrl = "https://my.menulogy.at/images/menu/client2/product-1625749715.png",
                            Price = 4.90m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Hausgemachte Eistee, Waldbeeren Sirup, Minze und Waldbeeren",
                            Name = "Eistee Beerentraum",
                            PictureUrl = "https://my.menulogy.at/images/menu/client2/product-1707155060.png",
                            Price = 4.90m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Description = "Ayran 0,5l 4,90.-\nJoghurt, Wasser und Salz",
                            Name = "Ayran 0,25l",
                            PictureUrl = "https://my.menulogy.at/images/menu/client2/product-1625748930.png",
                            Price = 2.90m
                        });
                });

            modelBuilder.Entity("MenuMangement.API.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("LogoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId")
                        .IsUnique();

                    b.ToTable("Restaurants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LogoUrl = "https://my.menulogy.at/images/logo/client2/Kopie%20von%20Ohne%20Titel%20(900%20x%20128%20px)%20(600%20x%20128%20px)%20(400%20x%20128%20px)%20(1).png",
                            MenuId = 1,
                            Name = "Sample Restaurant 1"
                        },
                        new
                        {
                            Id = 2,
                            LogoUrl = "https://my.menulogy.at/images/logo/client2/Kopie%20von%20Ohne%20Titel%20(900%20x%20128%20px)%20(600%20x%20128%20px)%20(400%20x%20128%20px)%20(1).png",
                            MenuId = 2,
                            Name = "Sample Restaurant 2"
                        });
                });

            modelBuilder.Entity("MenuMangement.API.Models.Category", b =>
                {
                    b.HasOne("MenuMangement.API.Models.Menu", "Menu")
                        .WithMany("Categories")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MenuMangement.API.Models.MenuItem", b =>
                {
                    b.HasOne("MenuMangement.API.Models.Category", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MenuMangement.API.Models.Restaurant", b =>
                {
                    b.HasOne("MenuMangement.API.Models.Menu", "Menu")
                        .WithOne("Restaurant")
                        .HasForeignKey("MenuMangement.API.Models.Restaurant", "MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("MenuMangement.API.Models.Category", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("MenuMangement.API.Models.Menu", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Restaurant")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
